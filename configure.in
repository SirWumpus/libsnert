#######################################################################
#	Thus it begins...
#######################################################################

AC_INIT(LibSnert, 1.74, [Anthony Howe <achowe@snert.com>])

dnl The autoconf version I learned to deal with.
AC_PREREQ(2.59)

SNERT_INIT(LIBSNERT, [Copyright 1996, 2010 by Anthony Howe. All rights reserved.])

AC_DEFINE_UNQUOTED(LIBSNERT_UNAME, [["${platform}"]])

#######################################################################
#	Setup paths
#######################################################################

# The total perspective vortex "You are here..."
AC_CONFIG_SRCDIR($PACKAGE_NAME.c)

abs_tardir=`pwd | sed -e 's,/cygdrive/\(.\),\1:,' -e 's,^\(.*\)/com/snert/src/.*,\1,'`
AC_SUBST(abs_incdir, $abs_tardir/com/snert/include)
AC_SUBST(abs_libdir, $abs_tardir/com/snert/lib)
AC_SUBST(abs_tardir, $abs_tardir)

AC_SUBST(snert_tardir, '${top_srcdir}/../../../..')
AC_SUBST(snert_incdir, '${top_srcdir}/../../include')
AC_SUBST(snert_libdir, '${top_srcdir}/../../lib')

CFLAGS="-I$snert_incdir $CFLAGS"
LDFLAGS="-L$snert_libdir $LDFLAGS"

#######################################################################
#	Auxliary files to be modified later
#######################################################################

AC_CONFIG_HEADERS([include/version.h:version.h.in])

AC_CONFIG_FILES(version.h.in)
AC_CONFIG_FILES(version.sh)
AC_CONFIG_FILES(libsnert.pc)
AC_CONFIG_FILES(makefile)
AC_CONFIG_FILES(crc/makefile)
AC_CONFIG_FILES(object/makefile)
AC_CONFIG_FILES(type/makefile)
AC_CONFIG_FILES(util/makefile)
AC_CONFIG_FILES(mail/makefile)
AC_CONFIG_FILES(net/makefile)
AC_CONFIG_FILES(sys/makefile)
AC_CONFIG_FILES(io/makefile)
AC_CONFIG_FILES(tools/makefile)

#######################################################################
#	Configuration options: settings
#######################################################################

SNERT_OPTION_ENABLE_64BIT
SNERT_OPTION_ENABLE_BCC32

AC_ARG_ENABLE(cache-db-185,
	[AC_HELP_STRING([--enable-cache-db-185],[try cache with Berkeley DB 1.85 (unsupported)])],
	[AC_DEFINE_UNQUOTED(IGNORE_CORRUPT_CACHE_ISSUE_WITH_DB_185)]
)

AC_ARG_ENABLE(sendmail-tagless-records,
	[AC_HELP_STRING([--enable-access-tagless],[support for tagless access records (Postfix)])],
	[
		AC_DEFINE_UNQUOTED(ENABLE_ACCESS_TAGLESS)
		AC_SUBST(enable_access_tagless)
	]
)

SNERT_OPTION_ENABLE_DEBUG
SNERT_OPTION_ENABLE_MINGW
SNERT_OPTION_ENABLE_POPAUTH
SNERT_OPTION_ENABLE_FORK
SNERT_OPTION_ENABLE_FCNTL_LOCKS

AC_ARG_ENABLE(pdq-fd-per-ns,
	[AC_HELP_STRING([--enable-pdq-fd-per-ns],[enable one file descriptor per NS server in PDQ API])],
	[AC_DEFINE_UNQUOTED(ENABLE_PDQ_FD_PER_NS)]
)

#######################################################################
#	Configuration options: packages
#######################################################################

SNERT_OPTION_WITH_DB
SNERT_OPTION_WITH_PTHREAD
SNERT_BUILD_THREADED_SQLITE3
SNERT_OPTION_WITH_SQLITE3
SNERT_OPTION_WITH_WINDOWS_SDK

AC_ARG_WITH(mutex,
	[AC_HELP_STRING([--with-mutex=API],[where API is fcntl, flock, posix, systemv, win32])], [
		if test "$withval" = "fcntl"; then
			semaphore_api='FCNTL_API'
		elif test "$withval" = "flock"; then
			semaphore_api='FLOCK_API'
		elif test "$withval" = "posix"; then
			semaphore_api='POSIX_API'
		elif test "$withval" = "systemv"; then
			semaphore_api='SYSTEMV_API'
		elif test "$withval" = "win32"; then
			semaphore_api='WIN32_API'
		else
			semaphore_api='UNKNOWN_API'
		fi
	],[
		semaphore_api='UNKNOWN_API'
	]
)

AC_ARG_WITH(shar-mem,
	[AC_HELP_STRING([--with-shar-mem=API],[where API is malloc, mmap-anon, posix, systemv, squeeze])], [
		if test "$withval" = "malloc"; then
			shared_memory_api='MALLOC_API'
		elif test "$withval" = "mmap-anon"; then
			shared_memory_api='MMAP_ANON'
		elif test "$withval" = "posix"; then
			shared_memory_api='POSIX_API'
		elif test "$withval" = "systemv"; then
			shared_memory_api='SYSTEMV_API'
		elif test "$withval" = "squeeze"; then
			echo
			echo "Oi! Don't squeeze the shar-mem! :>"
			echo
			shared_memory_api='UNKNOWN_API'
		else
			shared_memory_api='UNKNOWN_API'
		fi
	],[
		shared_memory_api='UNKNOWN_API'
	]
)

dnl AC_ARG_WITH(time,
dnl 	[AC_HELP_STRING([--with-time=API],[where API is ansi, bsd, posix])], [
dnl 		if test "$withval" = "posix"; then
dnl 			time_api='POSIX_API'
dnl 		elif test "$withval" = "bsd"; then
dnl 			time_api='BSD_API'
dnl 		else
dnl 			time_api='ANSI_API'
dnl 		fi
dnl 	],[
dnl 		time_api='UNKNOWN_API'
dnl 	]
dnl )

#######################################################################
#	Check for programs
#
#	Must do this AFTER setting up Borland specifc changes that
#	AC_PROG_CC won't detect otherwise.
#######################################################################

SNERT_DEFAULT_CC_SETTINGS
SNERT_TAR_SETTINGS

AC_PROG_MAKE_SET

AC_C_CONST
AC_CHECK_TYPES([mode_t, off_t, pid_t, uid_t, gid_t, size_t, ssize_t, time_t])

#######################################################################
#	Check for library, header, and function families.
#######################################################################

SNERT_CHECK_PREDEFINE([__WIN32__])
SNERT_FIND_LIBC
SNERT_ANSI_TIME
SNERT_PROCESS
SNERT_POSIX_IO
SNERT_POSIX_SIGNALS
SNERT_TERMIOS
SNERT_PTHREAD
SNERT_FIND_LIBPTHREAD
SNERT_SQLITE3
SNERT_BERKELEY_DB
SNERT_POSIX_SEMAPHORES
SNERT_SYSTEMV_SEMAPHORES
SNERT_NETWORK
SNERT_SYS
SNERT_PAM
SNERT_SETJMP
SNERT_RANDOM
SNERT_ANSI_STRING
SNERT_EXTRA_STRING
SNERT_REGEX
SNERT_LIBMILTER

echo
echo 'Miscellanous header & function checks...'
echo

AC_CHECK_HEADERS([sys/mman.h sys/shm.h])
AC_CHECK_HEADERS([ctime.h grp.h pwd.h sys/file.h])
AC_CHECK_FUNCS([flockfile funlockfile])

#######################################################################
#	Check for library functions
#######################################################################

AC_FUNC_MALLOC
AC_LIBOBJ(malloc)

AC_FUNC_MMAP
AC_FUNC_SETVBUF_REVERSED

AC_CHECK_FUNCS(brk sbrk)
AC_CHECK_FUNCS(atexit getenv putenv toupper tolower)

dnl SNERT_FUNC_FLOCK
AC_CHECK_FUNCS(flock fcntl lockf locking)
SNERT_CHECK_DEFINE(O_BINARY, fcntl.h)
SNERT_CHECK_DEFINE(LOCK_SH, sys/file.h)
if test $ac_cv_define_LOCK_SH = 'yes'; then
	AC_DEFINE_UNQUOTED(HAVE_LOCK_SH)
fi

dnl #######################################################################
dnl #	Fine resoluition clock
dnl #######################################################################
dnl
dnl if test "$time_api" = 'UNKNOWN_API'; then
dnl 	if test "$ac_cv_func_clock_gettime" = 'yes'; then
dnl 		# Fine resoluition clock in nano-seconds (10^-9)
dnl 		time_api='POSIX_API'
dnl 	elif test "$ac_cv_func_gettimeofday" = 'yes'; then
dnl 		# Fine resoluition clock in micro-seconds (10^-6)
dnl 		time_api='BSD_API'
dnl 	elif test "$ac_cv_func_time" = 'yes'; then
dnl 		# Fine resoluition clock in seconds (10^1)
dnl 		time_api='ANSI_API'
dnl 	fi
dnl fi
dnl
dnl AC_MSG_CHECKING([which fine resolution clock api to use])
dnl AC_DEFINE_UNQUOTED(TIME_API, $time_api)
dnl AC_SUBST(TIME_API, $time_api)
dnl AC_MSG_RESULT($time_api)

#######################################################################
#	Determine avaliable Mutex APIs
#######################################################################

has_mutex_fcntl_api='yes'
AC_CHECK_FUNCS(fcntl, [], [has_mutex_fcntl_api='no'])

has_mutex_flock_api='yes'
AC_CHECK_FUNCS(flock, [], [has_mutex_flock_api='no'])

if test "$ac_cv_header_windows_h" = 'yes'; then
	has_mutex_win32_api='yes'
else
	has_mutex_win32_api='no'
fi

AC_MSG_CHECKING([which mutex api to use])

if test "$semaphore_api" = 'UNKNOWN_API'; then
	# Prefers SystemV before POSIX
	if test "$platform" = 'Linux' -o "$platform" = 'FreeBSD' -o "$platform" = 'OpenBSD' -o "$platform" = 'NetBSD'; then
		if test $snert_systemv_semaphores = 'yes'; then
			semaphore_api='SYSTEMV_API'
		elif test $snert_posix_semaphores = 'yes'; then
			semaphore_api='POSIX_API'
		elif test $has_mutex_fcntl_api = 'yes'; then
			semaphore_api='FCNTL_API'
		elif test $has_mutex_flock_api = 'yes'; then
			semaphore_api='FLOCK_API'
		fi
	fi

	# Out in left field...
	if test "$ac_cv_define___WIN32__" = 'yes'; then
		semaphore_api='WIN32_API'
	fi

	# When unknown, prefer POSIX standard over SystemV.
	if test "$semaphore_api" = 'UNKNOWN_API'; then
		if test $snert_posix_semaphores = 'yes'; then
			semaphore_api='POSIX_API'
		elif test $snert_systemv_semaphores = 'yes'; then
			semaphore_api='SYSTEMV_API'
		elif test $has_mutex_fcntl_api = 'yes'; then
			semaphore_api='FCNTL_API'
		elif test $has_mutex_flock_api = 'yes'; then
			semaphore_api='FLOCK_API'
		fi
	fi
fi

AC_DEFINE_UNQUOTED(SERIALIZATION_API, $semaphore_api)
AC_SUBST(SERIALIZATION_API, "$semaphore_api")
AC_MSG_RESULT($semaphore_api)

#######################################################################
#	Determine avaliable Shared Memory APIs
#######################################################################

has_shm_mmap_api='yes'
AC_CHECK_FILE(/dev/zero)
SNERT_CHECK_DEFINE(MMAP_ANON, sys/mman.h)
AC_CHECK_FUNCS([mmap munmap], [], [has_shm_mmap_api='no'])
if test "$has_shm_mmap_api" = 'yes'; then
	if test "$ac_cv_define_MMAP_ANON" = 'yes'; then
		has_shm_mmap_api='anon'
	elif test "$ac_cv_file__dev_zero" = 'no'; then
		has_shm_mmap_api='no'
	fi
fi

has_shm_systemv_api='yes'
AC_CHECK_FUNCS([shmget shmat shmctl shmdt], [], [has_shm_systemv_api='no'])

if test "$ac_cv_header_windows_h" = 'yes'; then
	has_shm_win32_api='yes'
else
	has_shm_win32_api='no'
fi

dnl Shared memory API
dnl APR_CHECK_FILE(/dev/zero)
dnl
dnl if test $shared_memory_api = 'UNKNOWN_API'; then
dnl 	shared_memory_api='POSIX_API'
dnl 	SNERT_CHECK_DEFINE(MMAP_ANON, sys/mman.h)
dnl 	AC_CHECK_FUNCS([mmap munmap], [], [shared_memory_api='UNKNOWN_API'])
dnl
dnl 	if test $shared_memory_api = 'POSIX_API'; then
dnl 		if test $ac_cv_define_MMAP_ANON = yes; then
dnl 			shared_memory_api='MMAP_ANON'
dnl 		elif test $ac_cv_file__dev_zero = no; then
dnl 			shared_memory_api='UNKNOWN_API'
dnl 		fi
dnl 	fi
dnl fi
dnl if test $shared_memory_api = 'UNKNOWN_API'; then
dnl 	shared_memory_api='SYSTEMV_API'
dnl 	AC_CHECK_FUNCS([shmget shmat shmctl shmdt], [], [shared_memory_api='UNKNOWN_API'])
dnl fi
dnl if test $shared_memory_api = 'UNKNOWN_API'; then
dnl 	if test $ac_cv_header_windows_h = yes; then
dnl 		shared_memory_api='MALLOC_API'
dnl 	fi
dnl fi

AC_MSG_CHECKING([which shared memory api to use])

if test "$shared_memory_api" = 'UNKNOWN_API'; then
	# Prefers SystemV before POSIX
	if test "$platform" = 'Linux' -o "$platform" = 'FreeBSD' -o "$platform" = 'OpenBSD' -o "$platform" = 'NetBSD'; then
		if test "$has_shm_systemv_api" = 'yes'; then
			shared_memory_api='SYSTEMV_API'
		elif test "$has_shm_mmap_api" = 'anon'; then
			shared_memory_api='MMAP_ANON'
		elif test "$has_shm_mmap_api" = 'yes'; then
			shared_memory_api='POSIX_API'
		fi
	fi

	# Out in right field...
	if test "$ac_cv_define___WIN32__" = 'yes'; then
		shared_memory_api='WIN32_API'
	fi

	# When unknown, prefer POSIX standard over others.
	if test "$shared_memory_api" = 'UNKNOWN_API'; then
		if test "$has_shm_mmap_api" = 'yes'; then
			shared_memory_api='POSIX_API'
		elif test "$has_shm_mmap_api" = 'anon'; then
			shared_memory_api='MMAP_ANON'
		elif test "$has_shm_systemv_api" = 'yes'; then
			shared_memory_api='SYSTEMV_API'
		fi
	fi
fi

AC_DEFINE_UNQUOTED(SHARED_MEMORY_API, $shared_memory_api)
AC_SUBST(SHARED_MEMORY_API, "$shared_memory_api")
AC_MSG_RESULT($shared_memory_api)


#######################################################################
#	Generate output.
#######################################################################

SNERT_FINI

echo
echo "Generating files..."
echo
AC_OUTPUT()

echo
echo $PACKAGE_NAME/$package_major.$package_minor.$package_build
echo $package_copyright
echo
AC_MSG_RESULT([  Platform............: $platform $CC])
AC_MSG_RESULT([  Berkeley DB.........: $bdb_version ${HAVE_LIB_DB}])
AC_MSG_RESULT([  POSIX Threads.......: $ac_cv_func_pthread_create $ac_cv_func_pthread_mutex_lock])
AC_MSG_RESULT([  SQLite3.............: $ac_cv_func_sqlite3_open])
AC_MSG_RESULT([  Sendmail libmilter..: $snert_libmilter])
AC_MSG_RESULT([  Semaphore API.......: $semaphore_api])
AC_MSG_RESULT([  Shared Memory API...: $shared_memory_api])
dnl AC_MSG_RESULT([  Time API............: $time_api])
AC_MSG_RESULT([  CFLAGS..............: $CFLAGS])
AC_MSG_RESULT([  LDFLAGS.............: $LDFLAGS])
AC_MSG_RESULT([  LIBS................: $LIBS])
echo

#######################################################################
#	-END-
#######################################################################
