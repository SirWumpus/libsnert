#
# @package_copyright@
#
# @configure_input@
#

.POSIX :

.SUFFIXES :
A = .@LIBEXT@
O = .@OBJEXT@
E = @EXEEXT@
.SUFFIXES : .c .h .i $O $A

#
# Paths for supporting headers and libraries.
#
top_srcdir = @top_srcdir@
abs_srcdir = @abs_srcdir@
SNERT_TARDIR	= @snert_tardir@
SNERT_INCDIR	= @snert_incdir@
SNERT_LIBDIR	= @snert_libdir@

LIB	= $(SNERT_LIBDIR)/@PACKAGE_TARNAME@$A
BAK	= $(SNERT_LIBDIR)/@PACKAGE_TARNAME@.bak
TGZ	= $(SNERT_TARDIR)/@PACKAGE_TARNAME@-@PACKAGE_VERSION@.tgz

CC		= @CC@
CC_E	= @CC_E@
CC_O	= @CC_O@
CFLAGS	= ${CFLAGS_PREFIX} @CFLAGS@ ${CFLAGS_LIBEV}
LDFLAGS	= ${LDFLAGS_PREFIX} @LDFLAGS@ ${LDFLAGS_LIBEV}
LIBS	= ${LIBS_PREFIX} @LIBS@ ${LIB_LIBEV}

XARGSI	= @XARGSI@
RANLIB	= @RANLIB@
ARCHIVE	= @ARCHIVE@
COMPILE	= @COMPILE@

LIBSNERT 	= @LIBSNERT@
LIB_PAM		= @HAVE_LIB_PAM@
LIB_WS2_32	= @HAVE_LIB_WS2_32@
LIB_IPHLPAPI	= @HAVE_LIB_IPHLPAPI@
LIB_RT 		= @HAVE_LIB_RT@
LIB_SEM		= @HAVE_LIB_SEM@

LIB_PTHREAD	= @HAVE_LIB_PTHREAD@
CFLAGS_PTHREAD	= @CFLAGS_PTHREAD@
LDFLAGS_PTHREAD	= @LDFLAGS_PTHREAD@

LIB_SQLITE3	= @HAVE_LIB_SQLITE3@
CFLAGS_SQLITE3	= @CFLAGS_SQLITE3@
LDFLAGS_SQLITE3	= @LDFLAGS_SQLITE3@

LIB_LIBEV	= @HAVE_LIB_LIBEV@
CFLAGS_LIBEV	= @CFLAGS_LIBEV@
LDFLAGS_LIBEV	= @LDFLAGS_LIBEV@

LIB_LUA		= @HAVE_LIB_LUA@
CFLAGS_LUA	= @CFLAGS_LUA@
LDFLAGS_LUA	= @LDFLAGS_LUA@

#######################################################################

#%$O : %.c
.c$O :
	$(COMPILE)

#(%) : %
#	$(ARCHIVE)$*

#%$E : %.c
.c$E :
	$(CC) $(CFLAGS) $(LDFLAGS) $(CC_E)$*$E $< $(LIBSNERT) $(LIBS)

#%$E : %$O
$O$E :
	$(LD) $(LDFLAGS) $(CC_E)$*$E $*$O $(LIBSNERT) $(LIBS)

.c.i:
	${CC} -E ${CFLAGS} $*.c >$*.i

#######################################################################

REPLACED = URI$O

IDIR := ${top_srcdir}/include
HDIR := ${IDIR}/io
OBJS =	Error$O Log$O mkpath$O socketTimeoutIO$O socketAddress$O \
	socketAddressIsLocal$O socket2$O socket3$O socket3_tls$O events$O flock$O file$O

.MAIN : build

all: build

title :
	@echo
	@echo '***************************************************************'
	@echo '==> '${abs_srcdir}
	@echo '***************************************************************'
	@echo

build : title $(LIB) add-lib

$(LIB):	$(OBJS)

add-lib:
	@echo
	ar rc ${LIB} ${OBJS}
	$(RANLIB) $(LIB)
	@echo

clean : title
	-rm -f *.o *.obj *.i *.map *.tds *.TR2 *.stackdump core *.core core.* *.log
	-rm -f output*.dat Dns$E socketAddressIsLocal$E socket2$E

distclean: clean
	-rm -f makefile

install: build

${top_srcdir}/util/DebugMalloc.o : ${top_srcdir}/util/DebugMalloc.c
	cd ${top_srcdir}/util ; make DebugMalloc.o

debug : ${top_srcdir}/util/DebugMalloc.o
	make CFLAGS_PREFIX='-I${top_srcdir}' LIBS_PREFIX='${top_srcdir}/util/DebugMalloc.o' build

lint: title
#	-splint -D_REENTRANT -I${SNERT_INCDIR} +posixlib +boolint *.c

${HDIR}/socket3.h : ${IDIR}/version.h ${IDIR}/net/network.h ${HDIR}/socketAddress.h

socket3.c : ${HDIR}/socket3.h

socket3_tls.c : ${HDIR}/socket3.h socket3$O

events.c : ${IDIR}/type/list.h ${HDIR}/events.h

events$O : events.c

socket2$E : socketAddress$O socket2.c
	${WRAPPER} $(CC) -DTEST $(CFLAGS) $(LDFLAGS) $(CC_E)socket2$E socket2.c $(LIBSNERT) $(LIBS) ${LIB_RT} ${LIB_WS2_32} ${LIB_IPHLPAPI}

socketAddressIsLocal$E : socketAddress$O socket2$O socketAddressIsLocal.c
	${WRAPPER} $(CC) -DTEST $(CFLAGS) $(LDFLAGS) $(CC_E)socketAddressIsLocal$E socketAddressIsLocal.c socketAddress$O socket2$O $(LIBSNERT) $(LIBS) ${LIB_RT} ${LIB_WS2_32} ${LIB_IPHLPAPI}

smtpe$E : socketAddress$O socket3$O events$O smtpe.c
	${WRAPPER} $(CC) ${CFLAGS_LUA} ${CFLAGS_PTHREAD} ${CFLAGS} ${LDFLAGS_LUA} ${LDFLAGS_PTHREAD} ${LDFLAGS} $(CC_E)smtpe$E smtpe.c ${LIB_LUA} $(LIBSNERT) $(LIBS) ${LIB_PTHREAD} ${LIB_RT} ${LIB_WS2_32} ${LIB_IPHLPAPI}

smtpe.i : smtpe.c
	$(CC) -E ${CFLAGS_LUA} $(CFLAGS) -I/usr/local/include -o smtpe.i smtpe.c
