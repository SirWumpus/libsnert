/*
 * version.h
 *
 * Copyright 2002, 2012 by Anthony Howe. All rights reserved.
 */

#ifndef __com_snert_lib_version_h__
#define __com_snert_lib_version_h__	1

#ifdef __cplusplus
extern "C" {
#endif

/***********************************************************************
 ***
 ***********************************************************************/

#define __LIBSNERT__		1

#undef LIBSNERT_MAJOR
#undef LIBSNERT_MINOR
#undef LIBSNERT_BUILD
#undef LIBSNERT_NUMBER
#undef LIBSNERT_NAME
#undef LIBSNERT_VERSION
#undef LIBSNERT_STRING
#undef LIBSNERT_AUTHOR
#undef LIBSNERT_COPYRIGHT
#undef LIBSNERT_DEBUG
#undef LIBSNERT_UNAME

#undef LIBSNERT_CFLAGS
#undef LIBSNERT_LDFLAGS
#undef LIBSNERT_LIBS
#undef LIBSNERT_CONFIGURE
#undef LIBSNERT_BUILT
#undef LIBSNERT_BUILD_HOST
#undef LIBSNERT_PLATFORM

#undef LIBSNERT_SHARE

#ifndef __@platform@__
#define __@platform@__		1
#endif

#undef LIBC_PATH
#undef LIBPTHREAD_PATH

/* Sun defines __unix, but not __unix__ */
#if defined(__unix) && !defined(__unix__)
#define __unix__		1
#endif

#if defined(__APPLE__) && defined(__Darwin__)
#define __unix__		1
#endif

#if defined(_AIX) && !defined(__unix__)
#define __unix__		1
#endif

#undef WITH_WINDOWS_SDK

#undef NDEBUG

/*
 * Macro to test if we're using a GNU C compiler of a specific vintage
 * or later, for e.g. features that appeared in a particular version
 * of GNU C.  Usage:
 *
 *      #if __GNUC_PREREQ__(major, minor)
 *      ...cool feature...
 *      #else
 *      ...delete feature...
 *      #endif
 */
#ifdef __GNUC__
# define MY_GNUC_PREREQ(x, y)                                           \
        ((__GNUC__ == (x) && __GNUC_MINOR__ >= (y)) ||                  \
         (__GNUC__ > (x)))
#else
# define MY_GNUC_PREREQ(x, y)   0
#endif

#ifndef __dead
# if MY_GNUC_PREREQ(2, 5)
#  define __dead          __attribute__((__noreturn__))
# elif defined(__GNUC__)
#  define __dead          volatile
# else
#  define __dead
# endif
#endif

typedef struct {
	int major;
	int minor;
	int build;
	const char *package;
	const char *author;
	const char *copyright;
	const char *platform;
	const char *configure;
	const char *cflags;
	const char *ldflags;
	const char *libs;
	const char *built;
	const char *host;
} VersionInfo;

extern VersionInfo LibSnert;

/*
 * Fine resolution clock:
 *
 * POSIX_API    nanoseconds     10^-9
 * BSD_API      microseconds    10^-6
 * ANSI_API     seconds         10^1
 */
#undef TIME_API

/*
 * SYSTEMV_API
 * POSIX_API
 * WIN32_API
 * FCNTL_API
 * FLOCK_API
 */
#undef SERIALIZATION_API

/*
 * SYSTEMV_API
 * POSIX_API
 * WIN32_API
 * MMAP_ANON
 */
#undef SHARED_MEMORY_API

#define ENABLE_PDQ
#undef ENABLE_PDQ_FD_PER_NS
#undef ENABLE_ACCESS_TAGLESS

#ifdef WANKERS
/*
 * GLIBC does not enable all the POSIX standard prototypes by default.
 * Turning this on breaks other things.
 */
# define _XOPEN_SOURCE		600
#endif

#if defined(__GNUC__)
/* Cause problems with respect to conflicts between inline and static
 * replacement functions. This marco also appears to cause problems
 * with SuSE RPM builds.
 */
#undef _FORTIFY_SOURCE
#endif

/*
 * ANSI int types
 */
#undef HAVE_INTTYPES_H
#undef HAVE_STDINT_H

/*
 * POSIX Types
 */
#undef HAVE_GID_T
#undef HAVE_MODE_T
#undef HAVE_OFF_T
#undef HAVE_PID_T
#undef HAVE_UID_T
#undef HAVE_SIZE_T
#undef HAVE_SSIZE_T
#undef HAVE_TIME_T
#undef HAVE_INTPTR_T
#undef HAVE_UINTPTR_T

/*
 * C99/C11
 */
#undef HAVE_INTMAX_T
#undef HAVE_UINTMAX_T

/*
 * Assumed defaults for types when not defined.
 */
#ifndef HAVE_GID_T
typedef int gid_t;
#endif
#ifndef HAVE_MODE_T
typedef int mode_t;
#endif
#ifndef HAVE_OFF_T
typedef long off_t;
#endif
#ifndef HAVE_PID_T
# ifdef __MINGW32__
typedef HANDLE pid_t;
# else
typedef int pid_t;
# endif
#endif
#ifndef HAVE_UID_T
typedef int uid_t;
#endif
#ifndef HAVE_SIZE_T
typedef unsigned size_t;
#endif
#ifndef HAVE_SSIZE_T
typedef int ssize_t;
#endif
#ifndef HAVE_TIME_T
typedef unsigned long time_t;
#endif

/*
 * ANSI C
 */
#undef HAVE_SYS_TYPES_H
#undef STDC_HEADERS
#undef HAVE_STDLIB_H
#undef HAVE_STRING_H
#undef HAVE_MEMORY_H
#undef HAVE_STRINGS_H

/* Assumed present since C89. */
#undef HAVE_CTYPE_H
#undef HAVE_ERRNO_H
#undef HAVE_STDIO_H
#undef HAVE_LIMITS_H

/* Added in C99 */
#undef HAVE_MACRO_VA_COPY

/*
 * POSIX I/O
 */
#undef HAVE_FCNTL_H
#undef HAVE_SYS_STAT_H
#undef HAVE_UNISTD_H
#undef HAVE_UTIME_H
#undef HAVE_GETOPT
#undef HAVE_CHDIR
#undef HAVE_CHMOD
#undef HAVE_CHOWN
#undef HAVE_CHROOT
#undef HAVE_CHSIZE
#undef HAVE_CLOSE
#undef HAVE_CREAT
#undef HAVE_DUP
#undef HAVE_DUP2
#undef HAVE_FCHMOD
#undef HAVE_FSTAT
#undef HAVE_FTRUNCATE
#undef HAVE_GETCWD
#undef HAVE_LINK
#undef HAVE_LSEEK
#undef HAVE_MKDIR
#undef HAVE_OPEN
#undef HAVE_PIPE
#undef HAVE_READ
#undef HAVE_RENAME
#undef HAVE_RMDIR
#undef HAVE_SYMLINK
#undef HAVE_STAT
#undef HAVE_TRUNCATE
#undef HAVE_UMASK
#undef HAVE_UNLINK
#undef HAVE_UTIME
#undef HAVE_WRITE
#undef HAVE_DIRENT_H
#undef HAVE_CLOSEDIR
#undef HAVE_OPENDIR
#undef HAVE_READDIR
#undef HAVE_ISATTY
#undef HAVE_GETDTABLESIZE
#undef HAVE_FMEMOPEN
#undef HAVE_OPEN_MEMSTREAM
#undef HAVE_OPEN_WMEMSTREAM

#ifdef HAVE_CHSIZE
#define ftruncate chsize
#endif

/*
 * POSIX Signals
 */
#ifdef __sun__
/* Required before #include <signal.h> */
# define _POSIX_PTHREAD_SEMANTICS
#endif
#undef HAVE_SIGNAL_H
#undef HAVE_SIGSET_T
#undef HAVE_STRUCT_SIGALTSTACK
#undef HAVE_SIGALTSTACK
#undef HAVE_SIGEMPTYSET
#undef HAVE_SIGFILLSET
#undef HAVE_SIGADDSET
#undef HAVE_SIGDELSET
#undef HAVE_SIGISMEMBER
#undef HAVE_SIGACTION
#undef HAVE_SIGPROCMASK
#undef HAVE_SIGPENDING
#undef HAVE_SIGSUSPEND
#undef HAVE_SIGWAITINFO
#undef HAVE_SIGTIMEDWAIT
#undef HAVE_SIGQUEUE

#if defined(__MINGW32__)
# define SIGQUIT	3
#endif

/*
 * POSIX Thread & Mutex Functions
 */
#undef HAVE_PTHREAD_H
#undef HAVE_PTHREAD_T
#undef HAVE_PTHREAD_ATTR_T
#undef HAVE_PTHREAD_MUTEX_T
#undef HAVE_PTHREAD_MUTEXATTR_T
#undef HAVE_PTHREAD_ONCE_T
#undef HAVE_PTHREAD_CANCEL
#undef HAVE_PTHREAD_CREATE
#undef HAVE_PTHREAD_DETACH
#undef HAVE_PTHREAD_EQUAL
#undef HAVE_PTHREAD_EXIT
#undef HAVE_PTHREAD_JOIN
#undef HAVE_PTHREAD_KILL
#undef HAVE_PTHREAD_SELF
#undef HAVE_PTHREAD_YIELD
#undef HAVE_PTHREAD_SIGMASK
#undef HAVE_SIGWAIT
#undef HAVE_PTHREAD_ATFORK
#undef HAVE_PTHREAD_ATTR_INIT
#undef HAVE_PTHREAD_ATTR_DESTROY
#undef HAVE_PTHREAD_ATTR_GETDETACHSTATE
#undef HAVE_PTHREAD_ATTR_SETDETACHSTATE
#undef HAVE_PTHREAD_ATTR_GETSTACKADDR
#undef HAVE_PTHREAD_ATTR_SETSTACKADDR
#undef HAVE_PTHREAD_ATTR_GETSTACKSIZE
#undef HAVE_PTHREAD_ATTR_SETSTACKSIZE
#undef HAVE_PTHREAD_ATTR_GETSCOPE
#undef HAVE_PTHREAD_ATTR_SETSCOPE
#undef HAVE_PTHREAD_MUTEX_INIT
#undef HAVE_PTHREAD_MUTEX_DESTROY
#undef HAVE_PTHREAD_MUTEX_LOCK
#undef HAVE_PTHREAD_MUTEX_TRYLOCK
#undef HAVE_PTHREAD_MUTEX_UNLOCK
#undef HAVE_PTHREAD_MUTEXATTR_INIT
#undef HAVE_PTHREAD_MUTEXATTR_DESTROY
#undef HAVE_PTHREAD_MUTEXATTR_SETPRIOCEILING
#undef HAVE_PTHREAD_MUTEXATTR_GETPRIOCEILING
#undef HAVE_PTHREAD_MUTEXATTR_SETPROTOCOL
#undef HAVE_PTHREAD_MUTEXATTR_GETPROTOCOL
#undef HAVE_PTHREAD_MUTEXATTR_SETTYPE
#undef HAVE_PTHREAD_MUTEXATTR_GETTYPE
#undef HAVE_PTHREAD_RWLOCK_INIT
#undef HAVE_PTHREAD_RWLOCK_DESTROY
#undef HAVE_PTHREAD_RWLOCK_UNLOCK
#undef HAVE_PTHREAD_RWLOCK_RDLOCK
#undef HAVE_PTHREAD_RWLOCK_WRLOCK
#undef HAVE_PTHREAD_RWLOCK_TRYRDLOCK
#undef HAVE_PTHREAD_RWLOCK_TRYWRLOCK
#undef HAVE_PTHREAD_SPIN_INIT
#undef HAVE_PTHREAD_SPIN_DESTROY
#undef HAVE_PTHREAD_SPIN_LOCK
#undef HAVE_PTHREAD_SPIN_TRYLOCK
#undef HAVE_PTHREAD_SPIN_UNLOCK
#undef HAVE_PTHREAD_LOCK_GLOBAL_NP
#undef HAVE_PTHREAD_UNLOCK_GLOBAL_NP
#undef HAVE_PTHREAD_COND_BROADCAST
#undef HAVE_PTHREAD_COND_DESTROY
#undef HAVE_PTHREAD_COND_INIT
#undef HAVE_PTHREAD_COND_SIGNAL
#undef HAVE_PTHREAD_COND_TIMEDWAIT
#undef HAVE_PTHREAD_COND_WAIT
#undef HAVE_PTHREAD_KEY_CREATE
#undef HAVE_PTHREAD_KEY_DELETE
#undef HAVE_PTHREAD_GETSPECIFIC
#undef HAVE_PTHREAD_SETSPECIFIC
#undef HAVE_PTHREAD_CLEANUP_PUSH
#undef HAVE_PTHREAD_CLEANUP_POP
#undef HAVE_PTHREAD_ONCE
#undef LIBS_PTHREAD
#undef LDFLAGS_PTHREAD
#undef CPPFLAGS_PTHREAD
#undef CFLAGS_PTHREAD

/*
 * Scheduling
 */
#undef HAVE_SCHED_H
#undef HAVE_SCHED_GETPARAM
#undef HAVE_SCHED_GET_PRIORITY_MAX
#undef HAVE_SCHED_GET_PRIORITY_MIN
#undef HAVE_SCHED_RR_GET_INTERVAL
#undef HAVE_SCHED_GETSCHEDULER
#undef HAVE_SCHED_SETPARAM
#undef HAVE_SCHED_SETSCHEDULER
#undef HAVE_SCHED_YIELD
#undef CPPFLAGS_SCHED
#undef LDFLAGS_SCHED
#undef LIBS_SCHED

/*
 * Define to enable application level mutex debugging.
 * Set to 2 to enable hooking of library functions.
 */
#undef DEBUG_MUTEX

/*
 * fork() vs pthread_create()
 */
#undef ENABLE_FORK
#if defined(__WIN32__)

#elif defined(ENABLE_FORK)
# undef HAVE_PTHREAD_CREATE
#endif

/*
 * POSIX Semaphores
 */
#undef HAVE_LIB_SEM
#undef HAVE_SEMAPHORE_H
#undef HAVE_SEM_T
#undef HAVE_SEM_DESTROY
#undef HAVE_SEM_INIT
#undef HAVE_SEM_POST
#undef HAVE_SEM_WAIT
#undef HAVE_SEM_TRYWAIT
#undef HAVE_SEM_TIMEDWAIT

/*
 * System V Semaphores
 */
#undef HAVE_SYS_IPC_H
#undef HAVE_SYS_SEM_H
#undef HAVE_UNION_SEMUN

/* Netbsd sys/sem.h fails to define union semun. */
#ifndef HAVE_UNION_SEMUN
union semun {
	int     val;          	/* value for SETVAL */
	struct  semid_ds *buf;	/* buffer for IPC_{STAT,SET} */
	unsigned short *array;	/* array for GETALL & SETALL */
	struct seminfo *__buf;	/* buffer for IPC_INFO */
};
#endif

/*
 * Process Functions
 */
#undef HAVE_LIMITS_H
#undef HAVE_UNISTD_H
#undef HAVE_SYS_RESOURCE_H
#undef HAVE_SYS_WAIT_H
#undef HAVE_SYSEXITS_H
#undef HAVE_SYSLOG_H
#undef HAVE_GETUID
#undef HAVE_GETGID
#undef HAVE_SETUID
#undef HAVE_SETGID
#undef HAVE_GETEUID
#undef HAVE_GETEGID
#undef HAVE_SETEUID
#undef HAVE_SETEGID
#undef HAVE_GETPGID
#undef HAVE_SETPGID
#undef HAVE_GETRESUID
#undef HAVE_GETRESGID
#undef HAVE_SETRESUID
#undef HAVE_SETRESGID
#undef HAVE_SETREUID
#undef HAVE_GETGROUPS
#undef HAVE_SETGROUPS
#undef HAVE_INITGROUPS
#undef HAVE__EXIT
#undef HAVE_EXIT
#undef HAVE_DAEMON
#undef HAVE_FORK
#undef HAVE_EXCEL
#undef HAVE_EXCELE
#undef HAVE_EXCELP
#undef HAVE_EXECV
#undef HAVE_EXECVE
#undef HAVE_EXECVP
#undef HAVE_SETSID
#undef HAVE_WAIT
#undef HAVE_WAIT3
#undef HAVE_WAIT4
#undef HAVE_WAITPID
#undef HAVE_STRUCT_RLIMIT
#undef HAVE_RLIM_T
#undef HAVE_GETRLIMIT
#undef HAVE_SETRLIMIT

#ifndef HAVE_RLIM_T
/* My old Linux does not define this type */
#define rlim_t	long
#endif

/*
 * ANSI String Functions
 */
#undef HAVE_STRING_H
#undef HAVE_STRINGS_H
#undef HAVE_MEMCHR
#undef HAVE_MEMCMP
#undef HAVE_MEMCPY
#undef HAVE_MEMMOVE
#undef HAVE_MEMSET
#undef HAVE_STRCAT
#undef HAVE_STRNCAT
#undef HAVE_STRCPY
#undef HAVE_STRNCPY
#undef HAVE_STRCMP
#undef HAVE_STRCOLL
#undef HAVE_STRNCMP
#undef HAVE_STRXFRM
#undef HAVE_STRCHR
#undef HAVE_STRCSPN
#undef HAVE_STRERROR
#undef HAVE_STRERROR_R
#undef HAVE_STRLEN
#undef HAVE_STRPBRK
#undef HAVE_STRRCHR
#undef HAVE_STRSPN
#undef HAVE_STRSTR
#undef HAVE_STRTOK

/* Length of a static string. */
#ifndef STRLEN
#define STRLEN(ss)	(sizeof (ss)-1)
#endif

/*
 * Extra Stdio Functions
 */
#undef HAVE_IO_H
#undef HAVE_GETDELIM
#undef HAVE_GETLINE

#undef HAVE_GETPROGNAME
#undef HAVE_SETPROGNAME
#undef HAVE_ERR_H
#undef HAVE_ERR
#undef HAVE_ERRX
#undef HAVE_WARN
#undef HAVE_WARNX
#undef HAVE_VERR
#undef HAVE_VERRX
#undef HAVE_VWARN
#undef HAVE_VWARNX

/*
 * Extra String Functions
 */
#undef HAVE_STRDUP
#undef HAVE_STRTOL
#undef HAVE_STRLCPY
#undef HAVE_STRLCAT
#undef HAVE_STRCASECMP
#undef HAVE_STRNCASECMP
#undef HAVE_SNPRINTF
#undef HAVE_VSNPRINTF
#undef HAVE_VPRINTF
#undef HAVE_SETPROCTITLE

/*
 * Regex
 */
#undef HAVE_REGEX_H
#undef HAVE_REGCOMP
#undef HAVE_REGEXEC
#undef HAVE_REGERROR
#undef HAVE_REGFREE

/*
 * Termios
 */
#undef HAVE_TERMIOS_H
#undef HAVE_TCGETATTR
#undef HAVE_TCSETATTR
#undef HAVE_CTERMID

/*
 * SQLite3
 */
#undef HAVE_LIB_SQLITE3
#undef CFLAGS_SQLITE3
#undef LDFLAGS_SQLITE3
#undef HAVE_SQLITE3_H
#undef HAVE_SQLITE3_OPEN

/*
 * ANSI & POSIX Time Functions
 */
#undef HAVE_CTIME_H
#undef HAVE_TIME_H
#undef HAVE_SYS_TIME_H
#undef HAVE_CLOCK
#undef HAVE_DIFFTIME
#undef HAVE_MKTIME
#undef HAVE_TIME
#undef HAVE_ASCTIME
#undef HAVE_ASCTIME_R
#undef HAVE_CTIME
#undef HAVE_CTIME_R
#undef HAVE_GMTIME
#undef HAVE_LOCALTIME
#undef HAVE_STRFTIME
#undef HAVE_GMTIME_R
#undef HAVE_LOCALTIME_R
#undef HAVE_CLOCK_GETTIME
#undef HAVE_GETTIMEOFDAY
#undef HAVE_ALARM
#undef HAVE_GETITIMER
#undef HAVE_SETITIMER
#undef HAVE_TZSET
#undef HAVE_SLEEP
#undef HAVE_USLEEP
#undef HAVE_NANOSLEEP
#undef TM_IN_SYS_TIME
#undef HAVE_STRUCT_TM_TM_ZONE
#undef HAVE_STRUCT_TIMESPEC
#undef HAVE_STRUCT_TIMEVAL
#undef TIME_WITH_SYS_TIME
#undef HAVE_TZNAME

/*
 * ANSI I/O Functions
 */
#undef HAVE_FLOCKFILE
#undef HAVE_FUNLOCKFILE

/*
 * Time Functions
 */
#undef HAVE_ALARM
#undef HAVE_GETITIMER
#undef HAVE_SETITIMER
#undef HAVE_GETTIMEOFDAY

/*
 * Network Services
 */
#undef HAVE_NETDB_H
#undef HAVE_ENDHOSTENT
#undef HAVE_GETADDRINFO
#undef HAVE_GETHOSTBYADDR
#undef HAVE_GETHOSTBYADDR_R
#undef HAVE_GETHOSTBYNAME
#undef HAVE_GETHOSTBYNAME2
#undef HAVE_GETHOSTBYNAME2_R
#undef HAVE_GETHOSTBYNAME_R
#undef HAVE_GETHOSTENT
#undef HAVE_GETHOSTNAME
#undef HAVE_GETNAMEINFO
#undef HAVE_HERROR
#undef HAVE_HSTRERROR
#undef HAVE_SETHOSTENT
#undef HAVE_GETSERVENT
#undef HAVE_GETSERVBYPORT
#undef HAVE_GETSERVBYNAME
#undef HAVE_SETSERVENT
#undef HAVE_ENDSERVENT
#undef HAVE_GETPROTOENT
#undef HAVE_GETPROTOBYNUMBER
#undef HAVE_GETPROTOBYNAME
#undef HAVE_SETPROTOENT
#undef HAVE_ENDPROTOENT
#undef HAVE_IFADDRS_H
#undef HAVE_GETIFADDRS
#undef HAVE_FREEIFADDRS
#undef HAVE_NET_IF_H
#undef HAVE_IF_NAMEINDEX
#undef HAVE_IF_FREENAMEINDEX
#undef HAVE_IF_NAMETOINDEX
#undef HAVE_IF_INDEXTONAME

/*
 * Sockets
 */
#undef HAVE_ARPA_INET_H
#undef HAVE_NETINET_IN_H
#undef HAVE_NETINET_IN6_H
#undef HAVE_NETINET6_IN6_H
#undef HAVE_NETINET_TCP_H
#undef HAVE_STRUCT_SOCKADDR_IN6
#undef HAVE_STRUCT_SOCKADDR_UN
#undef HAVE_STRUCT_IN6_ADDR
#undef HAVE_SOCKLEN_T
#undef HAVE_POLL_H
#undef HAVE_SYS_POLL_H
#undef HAVE_SYS_SELECT_H
#undef HAVE_SYS_SOCKET_H
#undef HAVE_SYS_UN_H
#undef HAVE_WINSOCK2_H
#undef HAVE_WS2TCPIP_H
#undef HAVE_ACCEPT
#undef HAVE_BIND
#undef HAVE_CONNECT
#undef HAVE_GETADDRINFO
#undef HAVE_GETNAMEINFO
#undef HAVE_GETPEEREID
#undef HAVE_GETPEERNAME
#undef HAVE_GETSOCKNAME
#undef HAVE_GETSOCKOPT
#undef HAVE_HTONL
#undef HAVE_HTONS
#undef HAVE_INET_ADDR
#undef HAVE_INET_ATON
#undef HAVE_INET_NTOA
#undef HAVE_INET_NTOP
#undef HAVE_INET_PTON
#undef HAVE_LISTEN
#undef HAVE_NTOHL
#undef HAVE_NTOHS
#undef HAVE_POLL
#undef HAS_BROKEN_POLL
#undef HAVE_RECV
#undef HAVE_RECVFROM
#undef HAVE_RECVMSG
#undef HAVE_SELECT
#undef HAVE_SEND
#undef HAVE_SENDMSG
#undef HAVE_SENDTO
#undef HAVE_SETSOCKOPT
#undef HAVE_SHUTDOWN
#undef HAVE_SOCKET

/*
 * Linux I/O Events
 */
#undef HAVE_SYS_EPOLL_H
#undef HAVE_EPOLL_CREATE
#undef HAVE_EPOLL_CTL
#undef HAVE_EPOLL_WAIT
#undef HAVE_EPOLL_PWAIT

/*
 * FreeBSD, OpenBSD Kernel Events
 */
#undef HAVE_SYS_EVENT_H
#undef HAVE_KQUEUE
#undef HAVE_KEVENT

/* Windows does not provide an sa_len field and some
 * older Linux implementations also skimp on this field.
 */
#undef HAVE_STRUCT_SOCKADDR_SA_LEN
#undef HAVE_STRUCT_SOCKADDR_IN_SIN_LEN
#undef HAVE_STRUCT_SOCKADDR_IN6_SIN6_LEN
#undef HAVE_STRUCT_SOCKADDR_UN_SUN_LEN

#ifndef HAVE_SOCKLEN_T
# ifdef __sun__
typedef size_t socklen_t;
# endif
# ifdef __APPLE__
typedef int socklen_t;
# endif
#endif

/*
 * System Kernel
 */
#undef HAVE_SYS_PRCTL_H
#undef HAVE_PRCTL
#undef HAVE_SYS_PARAM_H
#undef HAVE_SYS_SYSCTL_H
#undef HAVE_SYSCTL
#undef HAVE_SYS_SYSINFO_H
#undef HAVE_GET_NPROCS
#undef HAVE_GET_NPROCS_CONF
#undef HAVE_FPATHCONF
#undef HAVE_PATHCONF
#undef HAVE_SYSCONF
#undef HAVE_GETLOADAVG

/*
 * PAM
 */
#undef HAVE_SECURITY_PAM_APPL_H
#undef HAVE_PAM_START
#undef HAVE_PAM_AUTHENTICATE
#undef HAVE_PAM_END

/*
 * setjmp
 */
#undef HAVE_SETJMP_H
#undef HAVE_JMP_BUF
#undef HAVE_SIGJMP_BUF
#undef HAVE_SETJMP
#undef HAVE_LONGJMP
#undef HAVE_SIGSETJMP
#undef HAVE_SIGLONGJMP

#ifdef HAVE_SIGJMP_BUF
# define JMP_BUF		sigjmp_buf
# define SETJMP(e)		sigsetjmp(e, 0)
# define LONGJMP(e,v)		siglongjmp(e, v)
# define SIGSETJMP(e,f)		sigsetjmp(e, f)
# define SIGLONGJMP(e,v)	siglongjmp(e, v)
#else
# define JMP_BUF		jmp_buf
# define SETJMP(e)		setjmp(e)
# define LONGJMP(e, v)		longjmp(e, v)
# define SIGSETJMP(e,f)		setjmp(e)
# define SIGLONGJMP(e, v)	longjmp(e, v)
#endif

#ifndef SETJMP_PUSH
#define SETJMP_PUSH(this_jb) \
	{ JMP_BUF _jb; memcpy(&_jb, this_jb, sizeof (_jb))

#define SETJMP_POP(this_jb) \
	memcpy(this_jb, &_jb, sizeof (_jb)); }
#endif

/*
 * Headers
 */
#undef HAVE_DLFCN_H
#undef HAVE_GRP_H
#undef HAVE_IO_H
#undef HAVE_MEMORY_H
#undef HAVE_PWD_H
#undef HAVE_STDLIB_H
#undef HAVE_SYS_FILE_H
#undef HAVE_SYS_MMAN_H
#undef HAVE_SYS_TYPES_H
#undef HAVE_WINDOWS_H
#undef HAVE_WINSOCK2_H
#undef HAVE_WS2TCPIP_H
#undef HAVE_IPHLPAPI_H
#undef STDC_HEADERS

/*
 * Functions
 */
#undef HAVE_BRK
#undef HAVE_SBRK
#undef HAVE_GETPAGESIZE
#undef HAVE_MMAP
#undef HAVE_MUNMAP
#undef PROTOTYPES

/*
 * Random
 */
#undef HAVE_RAND_R
#undef HAVE_SRAND
#undef HAVE_RAND
#undef HAVE_RANDOM
#undef HAVE_SRANDOM
#undef HAVE_INITSTATE
#undef HAVE_SETSTATE

/*
 * Sendmail libmilter
 */
#undef HAVE_LIBMILTER_MFAPI_H
#undef HAVE_SMFI_ADDHEADER
#undef HAVE_SMFI_ADDRCPT
#undef HAVE_SMFI_ADDRCPT_PAR
#undef HAVE_SMFI_CHGFROM
#undef HAVE_SMFI_CHGHEADER
#undef HAVE_SMFI_DELRCPT
#undef HAVE_SMFI_GETPRIV
#undef HAVE_SMFI_GETSYMVAL
#undef HAVE_SMFI_INSHEADER
#undef HAVE_SMFI_MAIN
#undef HAVE_SMFI_OPENSOCKET
#undef HAVE_SMFI_PROGRESS
#undef HAVE_SMFI_QUARANTINE
#undef HAVE_SMFI_REGISTER
#undef HAVE_SMFI_REPLACEBODY
#undef HAVE_SMFI_SETBACKLOG
#undef HAVE_SMFI_SETCONN
#undef HAVE_SMFI_SETDBG
#undef HAVE_SMFI_SETMAXDATASIZE
#undef HAVE_SMFI_SETMLREPLY
#undef HAVE_SMFI_SETPRIV
#undef HAVE_SMFI_SETREPLY
#undef HAVE_SMFI_SETSYMLIST
#undef HAVE_SMFI_SETTIMEOUT
#undef HAVE_SMFI_STOP
#undef HAVE_SMFI_VERSION
#undef CPPFLAGS_MILTER
#undef LDFLAGS_MILTER
#undef LIBS_MILTER

/*
 * Lua
 */
#undef HAVE_LUA_H
#undef CPPFLAGS_LUA
#undef LDFLAGS_LUA
#undef LIBS_LUA

/*
 * libev 4
 */
#undef USE_LIBEV
#undef HAVE_EV_H
#undef CPPFLAGS_LIBEV
#undef LDFLAGS_LIBEV
#undef LIBS_LIBEV

/*
 * OpenSSL
 */
#undef HAVE_OPENSSL_SSL_H
#undef HAVE_OPENSSL_BIO_H
#undef HAVE_OPENSSL_ERR_H
#undef HAVE_OPENSSL_CRYPTO_H
#undef HAVE_EVP_CLEANUP
#undef HAVE_SSL_LIBRARY_INIT
#undef HAVE_MACRO_OPENSSL_ADD_ALL_ALGORITHMS
#undef CPPFLAGS_SSL
#undef LDFLAGS_SSL
#undef LIBS_SSL

/*
 * SASL2
 *
 * This is not used yet, but here to test configure detection code.
 */
#undef HAVE_SASL_SASL_H
#undef HAVE_SASL_SASLUTIL_H
#undef HAVE_SASL_CHECKAPOP
#undef HAVE_PROP_GET
#undef CPPFLAGS_SASL2
#undef LDFLAGS_SASL2
#undef LIBS_SASL2

/*
 * Common Hashes
 */
#undef HAVE_MD4_H
#undef HAVE_MD5_H
#undef HAVE_RMD160_H
#undef HAVE_SHA1_H
#undef HAVE_SHA2_H


#undef HAVE_POP_BEFORE_SMTP

/*
 * Berkeley DB
 */
#undef IGNORE_CORRUPT_CACHE_ISSUE_WITH_DB_185
#undef HAVE_DB_MAJOR
#undef HAVE_DB_MINOR
#undef HAVE_DB_CREATE
#undef HAVE_DBOPEN
#undef HAVE_DB_H
#undef HAVE_LIB_DB
#undef LDFLAGS_DB
#undef CFLAGS_DB

/*
 * Define the flock() constants separately, since some systems
 * have flock(), but fail to define the constants in a header.
 * These values were taken from FreeBSD.
 */
#undef HAVE_LOCK_SH

#undef HAVE_FCNTL
#undef HAVE_FLOCK
#undef HAVE_LOCKF
#undef HAVE_LOCKING
#undef ENABLE_ALT_FLOCK

#ifndef EXIT_SUCCESS
# define EXIT_SUCCESS	0	/* TRUE or normal exit - ANSI C */
#endif
#ifndef EXIT_FAILURE
# define EXIT_FAILURE	1	/* FALSE or unspecified error - ANSI C */
#endif

/* This has been used fairly consistently in Snert code since 1990. */
#define EXIT_USAGE	2	/* Invalid or missing command-line option. */

#define QUOTE(x)	QUOTE_THIS(x)
#define QUOTE_THIS(x)	#x

#ifndef HAVE_CMPFN_T
#define HAVE_CMPFN_T
/**
 * @param a
 *	A pointer to object A.
 *
 * @param b
 *	A pointer to object B.
 *
 * @return
 *	Zero if A == B, negative if A < B, or positive if A > B.
 */
typedef int (*CmpFn)(const void *a, const void *b);
#endif

/***********************************************************************
 *** LibSnert Configure And Compile Time Information
 ***********************************************************************/

#ifndef LINE_WRAP
#define LINE_WRAP			72
#endif

extern void printVar(int columns, const char *name, const char *value);
extern void snertPrintVersion(void);
extern void snertPrintInfo(void);

/***********************************************************************
 *** Alternate Memory Allocator
 ***********************************************************************/

#ifndef HAVE_FREEFN_T
#define HAVE_FREEFN_T
typedef void (*FreeFn)(void *);
#endif

/*
 * Intended for debugging in combination with valgrind, which often
 * reports "...points to uninitialised byte(s)" when part of a buffer
 * remains unused. Should only be disabled once you are sure that what
 * valgrind is reporting can be safely ignored.
 */
#ifdef NDEBUG
# define MEMSET(p, b, s)
#else
# define MEMSET(p, b, s)       memset((p),(b),(s))
#endif

/*
 * @param ptr
 *	ptr is declared as a "void *" for compatibility with
 *	pthread_cleanup_push(), but is treated as a "void **" so
 *	that the pointer variable can be set to NULL once freed.
 */
extern void free_clear(void *ptr);

#include <com/snert/lib/sys/track.h>

/***********************************************************************
 *** GNU Backtrace
 ***********************************************************************/

#undef HAVE_BACKTRACE
#undef HAVE_BACKTRACE_SYMBOLS
#undef HAVE_BACKTRACE_SYMBOLS_FD

#ifdef HAVE_BACKTRACE
extern int backtrace(void **buffer, int size);
extern char **backtrace_symbols(void **buffer, int length);
extern void backtrace_symbols_fd(void **buffer, int length, int fd);
#endif

/***********************************************************************
 ***
 ***********************************************************************/

#ifdef  __cplusplus
}
#endif

#endif /* __com_snert_lib_version_h__ */
