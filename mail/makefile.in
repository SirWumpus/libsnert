#
# @package_copyright@
#
# @configure_input@
#

.POSIX :

.SUFFIXES :
A = .@LIBEXT@
O = .@OBJEXT@
E = @EXEEXT@
.SUFFIXES : .txt .c .i $O $A

prefix		:= @prefix@
exec_prefix	:= @exec_prefix@
bindir		:= @bindir@

VPATH		:= @srcdir@
srcdir		:= @srcdir@
top_srcdir	:= @top_srcdir@
abs_srcdir	:= @abs_srcdir@

builddir	:= @builddir@
top_builddir	:= @top_builddir@
abs_builddir	:= @abs_builddir@

SNERT_TARDIR	:= ${top_srcdir}/../../../..
SNERT_INCDIR	:= ${top_srcdir}/../../include
SNERT_LIBDIR	:= ${top_srcdir}/../../lib

LIB		:= $(SNERT_LIBDIR)/@PACKAGE_TARNAME@$A
BAK		:= $(SNERT_LIBDIR)/@PACKAGE_TARNAME@.bak
TGZ		:= $(SNERT_TARDIR)/@PACKAGE_TARNAME@-@PACKAGE_VERSION@.tgz

CC		:= @CC@
CC_E		:= @CC_E@
CC_O		:= @CC_O@
CFLAGS		 = ${CFLAGS_PREFIX} @CFLAGS@ -I${builddir}
LDFLAGS		 = ${LDFLAGS_PREFIX} @LDFLAGS@
LIBS		 = ${LIBS_PREFIX} @LIBS@

XARGSI		:= @XARGSI@
RANLIB		:= @RANLIB@
ARCHIVE		:= @ARCHIVE@
COMPILE		:= @COMPILE@

LIBSNERT 	= @LIBSNERT@
LIB_RT		= @HAVE_LIB_RT@

LIB_SEM		= @HAVE_LIB_SEM@
LIB_WS2_32	= @HAVE_LIB_WS2_32@
LIB_IPHLPAPI	= @HAVE_LIB_IPHLPAPI@
NETWORK_LIBS	= @NETWORK_LIBS@

LIB_DB		= @HAVE_LIB_DB@
CFLAGS_DB	= @CFLAGS_DB@
LDFLAGS_DB	= @LDFLAGS_DB@

LIB_MILTER	= @HAVE_LIB_MILTER@
CFLAGS_MILTER	= @CFLAGS_MILTER@
LDFLAGS_MILTER	= @LDFLAGS_MILTER@

LIB_PTHREAD	= @HAVE_LIB_PTHREAD@
CFLAGS_PTHREAD	= @CFLAGS_PTHREAD@
LDFLAGS_PTHREAD	= @LDFLAGS_PTHREAD@

LIB_SQLITE3	= @HAVE_LIB_SQLITE3@
CFLAGS_SQLITE3	= @CFLAGS_SQLITE3@
LDFLAGS_SQLITE3	= @LDFLAGS_SQLITE3@

#######################################################################

#%$O : %.c
.c$O :
	${CC} ${CFLAGS} -c $<

#(%) : %
#	$(ARCHIVE)$*

#%$E : %.c
.c$E :
	$(CC) $(CFLAGS) $(LDFLAGS) $(CC_E)$*$E $< $(LIBSNERT) $(LIBS)

#%$E : %$O
$O$E :
	$(LD) $(LDFLAGS) $(CC_E)$*$E $*$O $(LIBSNERT) $(LIBS)

.c.i:
	${CC} -E ${CFLAGS_SQLITE3} ${CFLAGS_MILTER} ${CFLAGS} $*.c >$*.i

#######################################################################

OBJS := grey$O tlds$O MailSpan$O parsePath$O mime$O siq$O spf$O smdb$O \
	smtp2$O mfReply$O smf$O

CLI :=	mime$E parsePath$E siq$E smtp2$E spf$E tlds$E dkim-hash$E

.MAIN : build

all : build

title :
	@echo
	@echo '***************************************************************'
	@echo '==> '${abs_builddir}
	@echo '***************************************************************'
	@echo

build: title $(LIB) add-lib

build-cli: title ${CLI}

install: build
	-cp -p mime$E smtp2$E spf$E ${bindir}

$(LIB):	$(OBJS)

add-lib:
	@echo
	ar rc ${LIB} ${OBJS}
	$(RANLIB) $(LIB)
	@echo

#add-lib:
#	@echo
#	for obj in $(OBJS); do $(ARCHIVE); done
#	$(RANLIB) $(LIB)
#	@echo

clean : title
	-rm -f *.o *.obj *.i *.map *.tds *.TR2 *.stackdump core *.core core.* *.log
	-rm -f parsePath$E smdb$E smtp$E smtp2$E spf$E siq$E tlds$E digestbl$E mime$E dkim-hash$E
	-rm -f tlds-alpha-by-domain.c two-level-tlds.c three-level-tlds.c

distclean: clean
	-rm makefile

debug : build

update-tlds: tlds-alpha-by-domain.txt two-level-tlds.txt three-level-tlds.txt

tlds-alpha-by-domain.txt:
	wget -r -O tlds-alpha-by-domain.txt http://data.iana.org/TLD/tlds-alpha-by-domain.txt

tlds-alpha-by-domain.c : ${srcdir}/tlds.sed ${srcdir}/tlds-alpha-by-domain.txt
	sed -f ${srcdir}/tlds.sed ${srcdir}/tlds-alpha-by-domain.txt >tlds-alpha-by-domain.c

# Disabled. New reliable source of "offical" 2-level country TLDs maintained
# by AlexB as part of SpamAssassin has to be updated by hand, but not expected
# to change regularly. Not included are "vanity" domains.
# https://svn.apache.org/repos/asf/spamassassin/trunk/lib/Mail/SpamAssassin/Util/RegistrarBoundaries.pm
#two-level-tlds.txt:
#	wget -r -O two-level-tlds.txt http://www.surbl.org/tld/two-level-tlds

# Managed by hand.
# https://svn.apache.org/repos/asf/spamassassin/trunk/lib/Mail/SpamAssassin/Util/RegistrarBoundaries.pm
two-level-tlds.txt:
	true

two-level-tlds.c : ${srcdir}/two-level-tlds.txt
	sed -e '/^#/d' -e '/[^A-Za-z0-9.-]/d' -e 's/.*/"&",/' ${srcdir}/two-level-tlds.txt >two-level-tlds.c

three-level-tlds.txt:
	wget -r -O three-level-tlds.txt http://www.surbl.org/tld/three-level-tlds

three-level-tlds.c : ${srcdir}/three-level-tlds.txt
	sed -e '/^#/d' -e '/[^A-Za-z0-9.-]/d' -e 's/.*/"&",/' ${srcdir}/three-level-tlds.txt >three-level-tlds.c

tlds$O : tlds-alpha-by-domain.c two-level-tlds.c three-level-tlds.c tlds.c

lint: title
	-splint -D_REENTRANT -U__WIN32__ -I${SNERT_INCDIR} +posixlib +boolint *.c

${top_builddir}/sys/gmtime_r$O: ${top_srcdir}/sys/gmtime_r.c

parsePath$E : ${top_builddir}/sys/gmtime_r$O MailSpan.c parsePath.c
	${WRAPPER} $(CC) -DTEST $(CFLAGS) $(LDFLAGS) $(CC_E)parsePath$E ${srcdir}/parsePath.c ${srcdir}/MailSpan.c $(LIBSNERT) $(LIBS)

# This cannot be built until AFTER the lib/io routines have been built.
smtp2$E : ${top_builddir}/net/pdq$O ${top_builddir}/io/socket2$O smtp2.c
	${WRAPPER} $(CC) -DTEST $(CFLAGS) $(LDFLAGS) $(CC_E)smtp2$E ${srcdir}/smtp2.c $(LIBSNERT) ${NETWORK_LIBS} ${LIBS}

# This cannot be built until AFTER the lib/io routines have been built.
spf$E :  ${top_builddir}/net/pdq$O spf.c
	${WRAPPER} $(CC) -DTEST $(CFLAGS) $(LDFLAGS) $(CC_E)spf$E ${srcdir}/spf.c $(LIBSNERT) ${NETWORK_LIBS} ${LIBS}

# This cannot be built until AFTER the lib/io routines have been built.
siq$E :  ${top_builddir}/net/pdq$O siq.c
	${WRAPPER} $(CC) -DTEST $(CFLAGS) $(LDFLAGS) $(CC_E)siq$E ${srcdir}/siq.c $(LIBSNERT) ${NETWORK_LIBS} ${LIBS}

tlds$E : tlds-alpha-by-domain.c two-level-tlds.c tlds.c
	${WRAPPER} $(CC) -DTEST $(CFLAGS) $(LDFLAGS) $(CC_E)tlds$E ${srcdir}/tlds.c $(LIBSNERT) $(LIBS)

mime$E : mime.c
	${WRAPPER} $(CC) -DTEST $(CFLAGS) $(LDFLAGS) $(CC_E)mime$E ${srcdir}/mime.c $(LIBSNERT) $(LIBS)

# In order to test singleKey() and doubleKey() lookups.
smdb$E : smdb.c
	${WRAPPER} $(CC) -DTEST $(CFLAGS) $(LDFLAGS) $(CC_E)smdb$E ${srcdir}/smdb.c $(LIBSNERT) ${LIB_DB} ${LIB_SQLITE3} ${NETWORK_LIBS}

digestbl$E : digestbl.c
	${CC} -DTEST ${CFLAGS} ${LDFLAGS} $(CC_E)digestbl$E ${srcdir}/digestbl.c $(LIBSNERT) ${LIBS} ${NETWORK_LIBS}

mfReply$O : mfReply.c
	${CC} ${CFLAGS_MILTER} ${CFLAGS} -c ${srcdir}/$*.c

smdb$O : smdb.c
	${CC} ${CFLAGS_DB} ${CFLAGS_SQLITE3} ${CFLAGS_MILTER} ${CFLAGS} -c ${srcdir}/$*.c

smf$O : smf.c
	${CC} ${CFLAGS_DB} ${CFLAGS_SQLITE3} ${CFLAGS_MILTER} ${CFLAGS} -c ${srcdir}/$*.c

dkim-hash$E : dkim-hash.c
	${CC} ${CFLAGS} ${LDFLAGS} ${CC_E}dkim-hash ${srcdir}/dkim-hash.c ${LIBSNERT}
